<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HARRY POTTER TMI</title>
      <link href="/2020/04/06/HARRY-POTTER-TMI/"/>
      <url>/2020/04/06/HARRY-POTTER-TMI/</url>
      
        <content type="html"><![CDATA[<h1 id="HARRY-POTTER-TMI"><a href="#HARRY-POTTER-TMI" class="headerlink" title="HARRY POTTER TMI"></a>HARRY POTTER TMI</h1><p>该笔记内容来自视频<a href="https://www.bilibili.com/video/BV1FJ41177Sm/" target="_blank" rel="noopener"> 哈利解说</a><br>这系列视频讲的真的很不错，哈迷冲呀！</p><h2 id="SMALL-TMI"><a href="#SMALL-TMI" class="headerlink" title="SMALL TMI"></a>SMALL TMI</h2><ul><li><p>1930：Global wizarding war 全球魔法大战（欧洲大陆，除了英国）格林德沃</p></li><li><p>1970：The first wizarding war 第一次魔法大战（发生在英国）伏地魔</p></li><li><p>戈德里克山谷（Godric’s Hollow）:哈利一家藏身的地方，曾是格兰芬多&amp;邓布利多的家。</p></li><li><p>飞天摩托是小天狼星借给海格的。</p></li><li><p>德思礼夫妇家地址：萨里郡，小惠金区，女贞路4号。</p></li><li><p>奥利凡德魔杖店 SINCE 382.B.C（大概春秋战国时期）。</p></li><li><p>哈利和伏地魔的魔杖的杖芯出自同一只凤凰的羽毛。</p></li><li><p>破釜酒吧是对角巷1号。</p></li><li><p>古灵阁687号金库：哈利爸妈的遗产。</p></li><li><p>古灵阁713号金库：魔法石。</p></li><li><p>古灵阁货币等级：金加隆，银西可，铜纳特。</p></li><li><p>罗琳父母相遇在从国王十字车站出发前往苏格兰的火车上。</p></li><li><p>霍格沃兹的班车：国王十字车站-霍格莫德（魔法村，对三年级以上的学生开放）</p></li><li><p>霍格沃兹的班车一年六趟：开学季，圣诞节，复活节。</p></li><li><p>霍格沃兹在英国高地的某处，被魔法封印，麻瓜只能看到一片废墟。</p></li><li><p>霍格沃兹的主塔（有旋转楼梯的地方）有7层。</p></li><li><p>尼克勒梅，魔法石的主人。魔法石可以点石成金，制造长生不死魔药。</p></li><li><p>波特家族也是纯血家族，但是不在纯血28里，因为列表人觉得“波特”听起来太麻瓜。</p></li><li><p>厄里斯之镜上的话倒过来是：I show not your face but your hearts desire。</p></li><li><p>魔法石被邓布利多附魔藏在厄里斯之镜中，只有不是为了欲望而是想保护它的人才能得到。</p></li><li><p>汤姆里德尔和斯莱特林有血缘关系（斯莱特林继承人kkk）。</p></li><li><p>斯莱特林最初造密室是为了让学生练习黑魔法。</p></li><li><p>伏地魔的第一个魂器时是日记本（封印了16岁灵魂和记忆），通过放出蛇怪谋杀桃金娘制造。</p></li><li><p>密室蛇怪是鸡蛋由蟾蜍孵化而来（斯莱特林跑路前放进去的）。</p></li><li><p>密室入口：桃金娘的洗手间的洗手池一个水龙头的一侧的蛇形印记，用蛇佬腔说“打开”可以开启。</p></li><li><p>伏地魔的灭亡让家养小精灵的生活产生了光和希望，所以在多比看来，哈利=希望之光。</p></li><li><p>打人柳下是一个长隧道的入口，通往魔法村的尖叫棚屋（邓布利多为了掩护卢平变身造的）</p></li><li><p>mudblood指父母双方都是麻瓜的巫师</p></li><li><p>斯莱特林宿舍入口：入口厅往湖边的方向。</p></li><li><p>斯莱特林宿舍在地牢层（斯莱特林自己定的），休息室在湖底。</p></li><li><p>1943年（杀桃金娘那年），汤姆里德尔得了学校特殊贡献奖（可能因为举报了海格？）</p></li><li><p>疯眼汉穆迪的假眼能看穿隐形斗篷。</p></li><li><p>卢平是5岁被狼人报复咬伤的（父亲是魔法部工作人员，歧视狼人）。</p></li><li><p>狼人每月满月时被动转化，会失去理智攻击人类，但几乎不攻击其他物种。</p></li><li><p>狼人传播途径是咬人。狼人也可交配生出高智商狼崽。</p></li><li><p>小天狼星进格兰芬多宿舍，是沟通克鲁克山（赫敏的猫）偷了纳威写的口令纸条给他。</p></li><li><p>摄魂怪是阿兹卡班的土著，强大的黑暗生物，无法被杀死，会吸快乐，和平，幸福。</p></li><li><p>摄魂怪范围式攻击：吸快乐；一对一攻击（摄魂怪之吻）：吸灵魂，没灵魂就是植物人。</p></li><li><p>小天狼星家族的名字都是由星座命名的。</p></li><li><p>阿尼马斯格斯(Animagus)变身动物时无法选择什么动物，变身不用魔杖。</p></li><li><p>伏地魔把阿吉尼做成魂器是通过杀了乔金斯（火焰杯那部，魔法部职员）。</p></li><li><p>伏地魔的小躯壳是彼得用独角兽血液和纳吉尼的毒液做的。</p></li><li><p>绿色骷髅头是伏地魔团队标志，魁地奇决赛中小克劳奇用偷来的哈利的魔杖放出。</p></li><li><p>小克劳奇假扮穆迪，老克劳奇被伏地魔控制。</p></li></ul><h2 id="BIG-TMI"><a href="#BIG-TMI" class="headerlink" title="BIG TMI"></a>BIG TMI</h2><h3 id="特里劳妮的预言"><a href="#特里劳妮的预言" class="headerlink" title="特里劳妮的预言"></a>特里劳妮的预言</h3><p>1980夏：特里劳妮（Inner Eye）在面试时对邓布利多抛出预言：</p><blockquote><p>The one with the power to vanquish the Dark Lord approaches…<br>born to those who have thrice defied him,<br>born as the seventh month dies…<br>and the Dark Lord will mark him as his equal, （咒语反弹后，伏地魔传送部分法力/灵魂给哈利）<br>but he will have power the Dark Lord knows not… （莉莉的爱）<br>and either must die at the hand of the other<br>for neither can live while the other survives…</p></blockquote><p>前四句被斯内普听到，汇报给伏地魔</p><h3 id="赤胆忠心咒"><a href="#赤胆忠心咒" class="headerlink" title="赤胆忠心咒"></a>赤胆忠心咒</h3><ul><li>秘密封印在秘密守护者身上</li><li>即使这个秘密之前有别人知道，但秘密封印之后，只有秘密守护者可以把秘密告诉他人，其他人无法说出来</li><li>除非秘密守护者自愿说出，无论如何折磨也无法得到秘密</li><li>秘密守护者死去，其他知道秘密的人成为下一个守护者</li></ul><h3 id="The-Marauders-掠夺者天团"><a href="#The-Marauders-掠夺者天团" class="headerlink" title="The Marauders 掠夺者天团"></a>The Marauders 掠夺者天团</h3><ul><li>卢平：Moony 月亮脸</li><li>詹姆：Prongs 尖头叉子（牡鹿的角）</li><li>小天狼星：Padfoot 大脚板（黑狗爪爪）</li><li>彼得：Wormtail 虫尾巴（老鼠尾巴）</li></ul><h3 id="为什么让哈利寄养在佩妮家"><a href="#为什么让哈利寄养在佩妮家" class="headerlink" title="为什么让哈利寄养在佩妮家"></a>为什么让哈利寄养在佩妮家</h3><ul><li>哈利身上，莉莉的爱的保护层在17岁成年前一直有效</li><li>莉莉的亲情血缘是维系这个魔法的重要因素。</li><li>邓布利多用莉莉的“牺牲、血缘、爱”激活加强了这种魔法</li><li>“血缘纽带”成为哈利最强保护盾</li></ul><h3 id="海格"><a href="#海格" class="headerlink" title="海格"></a>海格</h3><ul><li>霍格沃兹的钥匙管理员和场地看守</li><li>格兰芬多学生</li><li>在三年级时被汤姆里德尔陷害（杀害桃金娘）被学校开除，折断魔杖，禁用魔法</li><li>邓布利多留下他，并且用老魔杖部分修复了海格的魔杖并嵌入藏在他的伞里</li></ul><h3 id="三小只生日"><a href="#三小只生日" class="headerlink" title="三小只生日"></a>三小只生日</h3><p>赫敏（1979/09/19）<br>罗恩（1980/03/01）<br>哈利（1980/07/31）</p><h3 id="韦斯莱七兄妹"><a href="#韦斯莱七兄妹" class="headerlink" title="韦斯莱七兄妹"></a>韦斯莱七兄妹</h3><ol><li>大哥（在埃及工作）</li><li>查理</li><li>珀西（格兰芬多级长）</li><li>弗雷德</li><li>乔治</li><li>罗恩</li><li>金妮</li></ol><h3 id="奥利凡德的三种杖芯"><a href="#奥利凡德的三种杖芯" class="headerlink" title="奥利凡德的三种杖芯"></a>奥利凡德的三种杖芯</h3><ul><li>独角兽的毛 Unicorn hair<ul><li>✔ 稳定性好，黑魔抗高，忠诚</li><li>❌ 天花板有限，需要维修</li><li>使用者：罗恩，马尔福，卢平</li></ul></li><li>龙的心弦 Dragon heartstring<ul><li>✔ 潜力大 适应性强</li><li>❌ 不够忠心，容易陷入黑魔法，难以驾驭</li><li>使用者：赫敏，麦格</li></ul></li><li>凤凰的羽毛 Phoenix feather<ul><li>✔ 最稀有，能够掌握魔法范围最广</li><li>❌ 挑剔</li><li>使用者：哈利（7金加隆买的），伏地魔</li></ul></li></ul><h3 id="格兰芬多魁地奇队"><a href="#格兰芬多魁地奇队" class="headerlink" title="格兰芬多魁地奇队"></a>格兰芬多魁地奇队</h3><ul><li>詹姆波特：找球手</li><li>麦格教授（送了哈利光轮2000）</li><li>查理（罗恩二哥）</li><li>弗雷德&amp;乔治</li><li>伍德（哈利当时的格兰芬多队长）</li></ul><h3 id="巫师交通工具"><a href="#巫师交通工具" class="headerlink" title="巫师交通工具"></a>巫师交通工具</h3><ul><li>飞路粉<ul><li>抓着念咒语</li><li>壁炉-壁炉</li></ul></li><li>飞天扫帚</li><li>骑士巴士<ul><li>站在路阶上掏出魔杖就会出现</li><li>能去任何地方</li><li>麻瓜看不到</li></ul></li><li>门钥匙(Portkey)<ul><li>可以是任意物体</li><li>附魔后触碰它的人可以立刻传送到门钥匙指定地点</li><li>可多人同时传送</li><li>全英国大概200个</li></ul></li><li>麻瓜火车</li></ul><h3 id="三强争霸赛"><a href="#三强争霸赛" class="headerlink" title="三强争霸赛"></a>三强争霸赛</h3><ul><li>英国-霍格沃兹</li><li>法国-布斯巴顿<ul><li>校友：尼格勒梅</li><li>校长：马克西姆（海格老相好）</li></ul></li><li>北欧-德姆斯特朗<ul><li>教黑魔法</li><li>校友：格林德沃，维克多克鲁姆（世界魁地奇大赛的明星追球手）</li><li>校长：伊戈尔卡卡洛夫（食死徒，将功赎罪被释放）</li></ul></li></ul><h3 id="霍格沃兹地图"><a href="#霍格沃兹地图" class="headerlink" title="霍格沃兹地图"></a>霍格沃兹地图</h3><p><img src="map1.png" alt="霍格沃兹地图1" title="霍格沃兹地图1"><br><img src="map2.png" alt="霍格沃兹地图2" title="霍格沃兹地图2"><br><img src="map3.png" alt="霍格沃兹地图3" title="霍格沃兹地图3"><br><img src="map4.png" alt="霍格沃兹地图4" title="霍格沃兹地图4"></p><h3 id="魁地奇规则"><a href="#魁地奇规则" class="headerlink" title="魁地奇规则"></a>魁地奇规则</h3><p><img src="ball.png" alt="魁地奇规则" title="魁地奇规则"></p><h3 id="霍格沃兹一年级必修课"><a href="#霍格沃兹一年级必修课" class="headerlink" title="霍格沃兹一年级必修课"></a>霍格沃兹一年级必修课</h3><p><img src="subject1.png" alt="必修课" title="必修课"></p><h3 id="神圣28纯血家族"><a href="#神圣28纯血家族" class="headerlink" title="神圣28纯血家族"></a>神圣28纯血家族</h3><p><img src="sacred28.png" alt="纯血28家族" title="纯血28家族"></p><h2 id="剧情-TMI"><a href="#剧情-TMI" class="headerlink" title="剧情 TMI"></a>剧情 TMI</h2><h3 id="伏地魔控制金妮开启密室"><a href="#伏地魔控制金妮开启密室" class="headerlink" title="伏地魔控制金妮开启密室"></a>伏地魔控制金妮开启密室</h3><ul><li>在对角巷，日记被卢修斯放到金妮的书桶里</li><li>金妮跟日记交流太多有了情感依赖，汤姆灵魂进入她的身体</li><li>金妮清醒，把日记丢在洗手间，打中桃金娘</li><li>桃金娘淹了洗手间，哈利去查看，日记被哈利发现</li><li>金妮害怕，偷回日记。汤姆控制金妮</li><li>金妮越虚弱汤姆越强大，最终灵魂实体化</li></ul><h3 id="哈利打败蛇怪"><a href="#哈利打败蛇怪" class="headerlink" title="哈利打败蛇怪"></a>哈利打败蛇怪</h3><ul><li>哈利的忠心召唤出福克斯，福克斯带来分院帽</li><li>哈利戴着分院帽求助，召唤出格兰芬多之剑杀了蛇怪</li><li>哈利被毒牙所伤，福克斯眼泪治愈哈利伤口</li><li>哈利用毒牙毁了日记本</li></ul><h3 id="哈利得到The-Marauder’s-Map"><a href="#哈利得到The-Marauder’s-Map" class="headerlink" title="哈利得到The Marauder’s Map"></a>哈利得到The Marauder’s Map</h3><ul><li>地图被费尔奇（宿管）没收</li><li>弗莱德和乔治从费尔奇那里偷拿</li><li>送给哈利</li></ul><h3 id="小天狼星越狱"><a href="#小天狼星越狱" class="headerlink" title="小天狼星越狱"></a>小天狼星越狱</h3><ul><li>韦斯莱一家中了预言家日报抽奖700金加隆，上报</li><li>魔法部部长福吉去阿兹卡班视察，小天狼星问福吉要他手上的报纸看</li><li>看到韦斯莱一家照片，认出罗恩的老鼠斑斑是彼得（斑斑是珀西传给罗恩的）</li><li>报纸写罗恩他们假期后要回霍格沃兹，担心彼得伤害哈利</li><li>变大黑狗越狱（摄魂兽对动物不敏感）</li></ul><h3 id="伏地魔重返魔法界"><a href="#伏地魔重返魔法界" class="headerlink" title="伏地魔重返魔法界"></a>伏地魔重返魔法界</h3><ul><li>魔法部员工乔金斯去老克劳奇家要签名，发现家庭精灵闪闪在和空气说话</li><li>乔金斯发现小克劳奇没死，生活在隐形斗篷下（被他爸施了夺魂咒）</li><li>老克劳奇修改乔金斯记忆</li><li>乔金斯去阿尔巴尼亚（伏地魔所在地）度假</li><li>乔金斯偶遇彼得，彼得骗她去见伏地魔</li><li>伏地魔发现乔金斯记忆被修改过，读取记忆</li><li>伏地魔得知小克劳奇没死，即将举办三强争霸赛&amp;世界魁地奇大赛，穆迪要上任霍格沃兹黑魔法防御课老师</li></ul><p>TBC.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 哈利波特 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈利波特 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hp</title>
      <link href="/2020/04/06/hp/"/>
      <url>/2020/04/06/hp/</url>
      
        <content type="html"><![CDATA[<h1 id="HARRY-POTTER-TIPS"><a href="#HARRY-POTTER-TIPS" class="headerlink" title="HARRY POTTER TIPS"></a>HARRY POTTER TIPS</h1><p>该笔记内容来自自视频<a href="https://www.bilibili.com/video/BV1FJ41177Sm/" target="_blank" rel="noopener"> 哈利解说</a><br>这系列视频讲的真的很不错，哈迷冲呀！</p><h2 id="SMALL-TMI"><a href="#SMALL-TMI" class="headerlink" title="SMALL TMI"></a>SMALL TMI</h2><p>1930：Global wizarding war 全球魔法大战（欧洲大陆，除了英国）格林德沃</p><p>1970：The first wizarding war 第一次魔法大战（发生在英国）伏地魔</p><p>戈德里克山谷（Godric’s Hollow）:哈利一家藏身的地方，曾是格兰芬多&amp;邓布利多的家。</p><p>飞天摩托是小天狼星借给海格的。</p><p>德思礼夫妇家地址：萨里郡，小惠金区，女贞路4号。</p><p>奥利凡德魔杖店 SINCE 382.B.C（大概春秋战国时期）。</p><p>哈利和伏地魔的魔杖的杖芯出自同一只凤凰的羽毛。</p><p>破釜酒吧是对角巷1号。</p><p>古灵阁687号金库：哈利爸妈的遗产。</p><p>古灵阁713号金库：魔法石。</p><p>古灵阁货币等级：金加隆，银西可，铜纳特。</p><p>罗琳父母相遇在从国王十字车站出发前往苏格兰的火车上。</p><p>霍格沃兹的班车：国王十字车站-霍格莫德（魔法村，对三年级以上的学生开放）</p><p>霍格沃兹的班车一年六趟：开学季，圣诞节，复活节。</p><p>霍格沃兹在英国高地的某处，被魔法封印，麻瓜只能看到一片废墟。</p><p>霍格沃兹的主塔（有旋转楼梯的地方）有7层。</p><p>尼克勒梅，魔法石的主人。魔法石可以点石成金，制造长生不死魔药。</p><p>波特家族也是纯血家族，但是不在纯血28里，因为列表人觉得“波特”听起来太麻瓜。</p><p>厄里斯之镜上的话倒过来是：I show not your face but your hearts desire</p><p>汤姆里德尔和斯莱特林有血缘关系（斯莱特林继承人kkk）。</p><p>斯莱特林最初造密室是为了让学生练习黑魔法。</p><p>伏地魔的第一个魂器时是日记本（封印了16岁灵魂和记忆），通过放出蛇怪谋杀桃金娘制造。</p><p>密室蛇怪是鸡蛋由蟾蜍孵化而来（斯莱特林跑路前放进去的）。</p><p>密室入口：桃金娘的洗手间的洗手池一个水龙头的一侧的蛇形印记，用蛇佬腔说“打开”可以开启。</p><p>魔法石被邓布利多附魔藏在厄里斯之镜中，只有不是为了欲望而是想保护它的人才能得到。</p><p>伏地魔的灭亡让家养小精灵的生活产生了光和希望，所以在多比看来，哈利=希望之光。</p><p>打人柳下是一个长隧道的入口，通往魔法村的尖叫棚屋（邓布利多为了掩护卢平变身造的）</p><p>mudblood指父母双方都是麻瓜的巫师</p><p>斯莱特林宿舍入口：入口厅往湖边的方向。</p><p>斯莱特林宿舍在地牢层（斯莱特林自己定的），休息室在湖底。</p><p>1943年（杀桃金娘那年），汤姆里德尔得了学校特殊贡献奖（可能因为举报了海格？）</p><p>疯眼汉穆迪的假眼能看穿隐形斗篷。</p><p>卢平是5岁被狼人报复咬伤的（父亲是魔法部工作人员，歧视狼人）。</p><p>狼人每月满月时被动转化，会失去理智攻击人类，但几乎不攻击其他物种。</p><p>狼人传播途径是咬人。狼人也可交配生出高智商狼崽。</p><p>小天狼星进格兰芬多宿舍，是沟通克鲁克山（赫敏的猫）偷了纳威写的口令纸条给他。</p><p>摄魂怪是阿兹卡班的土著，强大的黑暗生物，无法被杀死，会吸快乐，和平，幸福。</p><p>摄魂怪范围式攻击：吸快乐；一对一攻击（摄魂怪之吻）：吸灵魂，没灵魂就是植物人。</p><p>小天狼星家族的名字都是由星座命名的。</p><p>阿尼马斯格斯(Animagus)变身动物时无法选择什么动物，变身不用魔杖。</p><p>伏地魔把阿吉尼做成魂器是通过杀了乔金斯（火焰杯那部，魔法部职员）。</p><p>伏地魔的小躯壳是彼得用独角兽血液和纳吉尼的毒液做的。</p><p>绿色骷髅头是伏地魔团队标志，魁地奇决赛中小克劳奇用偷来的哈利的魔杖放出。</p><p>小克劳奇假扮穆迪，老克劳奇被伏地魔控制。</p><h2 id="BIG-TMI"><a href="#BIG-TMI" class="headerlink" title="BIG TMI"></a>BIG TMI</h2><h3 id="特里劳妮的预言"><a href="#特里劳妮的预言" class="headerlink" title="特里劳妮的预言"></a>特里劳妮的预言</h3><p>1980夏：特里劳妮（Inner Eye）在面试时对邓布利多抛出预言：</p><blockquote><p>The one with the power to vanquish the Dark Lord approaches…<br>born to those who have thrice defied him,<br>born as the seventh month dies…<br>and the Dark Lord will mark him as his equal, （咒语反弹后，伏地魔传送部分法力/灵魂给哈利）<br>but he will have power the Dark Lord knows not… （莉莉的爱）<br>and either must die at the hand of the other<br>for neither can live while the other survives…<br>前四句被斯内普听到，汇报给伏地魔</p></blockquote><h3 id="赤胆忠心咒"><a href="#赤胆忠心咒" class="headerlink" title="赤胆忠心咒"></a>赤胆忠心咒</h3><ul><li>秘密封印在秘密守护者身上</li><li>即使这个秘密之前有别人知道，但秘密封印之后，只有秘密守护者可以把秘密告诉他人，其他人无法说出来</li><li>除非秘密守护者自愿说出，无论如何折磨也无法得到秘密</li><li>秘密守护者死去，其他知道秘密的人成为下一个守护者</li></ul><h3 id="The-Marauders-掠夺者天团"><a href="#The-Marauders-掠夺者天团" class="headerlink" title="The Marauders 掠夺者天团"></a>The Marauders 掠夺者天团</h3><ul><li>卢平：Moony 月亮脸</li><li>詹姆：Prongs 尖头叉子（牡鹿的角）</li><li>小天狼星：Padfoot 大脚板（黑狗爪爪）</li><li>彼得：Wormtail 虫尾巴（老鼠尾巴）</li></ul><h3 id="为什么让哈利寄养在佩妮家"><a href="#为什么让哈利寄养在佩妮家" class="headerlink" title="为什么让哈利寄养在佩妮家"></a>为什么让哈利寄养在佩妮家</h3><ul><li>哈利身上，莉莉的爱的保护层在17岁成年前一直有效</li><li>莉莉的亲情血缘是维系这个魔法的重要因素。</li><li>邓布利多用莉莉的“牺牲、血缘、爱”激活加强了这种魔法</li><li>“血缘纽带”成为哈利最强保护盾</li></ul><h3 id="海格"><a href="#海格" class="headerlink" title="海格"></a>海格</h3><ul><li>霍格沃兹的钥匙管理员和场地看守</li><li>格兰芬多学生</li><li>在三年级时被汤姆里德尔陷害（杀害桃金娘）被学校开除，折断魔杖，禁用魔法</li><li>邓布利多留下他，并且用老魔杖部分修复了海格的魔杖并嵌入藏在他的伞里</li></ul><h3 id="三小只生日"><a href="#三小只生日" class="headerlink" title="三小只生日"></a>三小只生日</h3><p>赫敏（1979/09/19）<br>罗恩（1980/03/01）<br>哈利（1980/07/31）</p><h3 id="韦斯莱七兄妹"><a href="#韦斯莱七兄妹" class="headerlink" title="韦斯莱七兄妹"></a>韦斯莱七兄妹</h3><ol><li>大哥（在埃及工作）</li><li>查理</li><li>珀西（格兰芬多级长）</li><li>弗雷德</li><li>乔治</li><li>罗恩</li><li>金妮</li></ol><h3 id="奥利凡德的三种杖芯"><a href="#奥利凡德的三种杖芯" class="headerlink" title="奥利凡德的三种杖芯"></a>奥利凡德的三种杖芯</h3><ul><li>独角兽的毛 Unicorn hair<ul><li>✔ 稳定性好，黑魔抗高，忠诚</li><li>❌ 天花板有限，需要维修</li><li>使用者：罗恩，马尔福，卢平</li></ul></li><li>龙的心弦 Dragon heartstring<ul><li>✔ 潜力大 适应性强</li><li>❌ 不够忠心，容易陷入黑魔法，难以驾驭</li><li>使用者：赫敏，麦格</li></ul></li><li>凤凰的羽毛 Phoenix feather<ul><li>✔ 最稀有，能够掌握魔法范围最广</li><li>❌ 挑剔</li><li>使用者：哈利（7金加隆买的），伏地魔</li></ul></li></ul><h3 id="格兰芬多魁地奇队"><a href="#格兰芬多魁地奇队" class="headerlink" title="格兰芬多魁地奇队"></a>格兰芬多魁地奇队</h3><ul><li>詹姆波特：找球手</li><li>麦格教授（送了哈利光轮2000）</li><li>查理（罗恩二哥）</li><li>弗雷德&amp;乔治</li><li>伍德（哈利当时的格兰芬多队长）</li></ul><h3 id="巫师交通工具"><a href="#巫师交通工具" class="headerlink" title="巫师交通工具"></a>巫师交通工具</h3><ul><li>飞路粉<ul><li>抓着念咒语</li><li>壁炉-壁炉</li></ul></li><li>飞天扫帚</li><li>骑士巴士<ul><li>站在路阶上掏出魔杖就会出现</li><li>能去任何地方</li><li>麻瓜看不到</li></ul></li><li>门钥匙(Portkey)<ul><li>可以是任意物体</li><li>附魔后触碰它的人可以立刻传送到门钥匙指定地点</li><li>可多人同时传送</li><li>全英国大概200个</li></ul></li><li>麻瓜火车</li></ul><h3 id="三强争霸赛"><a href="#三强争霸赛" class="headerlink" title="三强争霸赛"></a>三强争霸赛</h3><ul><li>英国-霍格沃兹</li><li>法国-布斯巴顿<ul><li>校友：尼格勒梅</li><li>校长：马克西姆（海格老相好）</li></ul></li><li>北欧-德姆斯特朗<ul><li>教黑魔法</li><li>校友：格林德沃，维克多克鲁姆（世界魁地奇大赛的明星追球手）</li><li>校长：伊戈尔卡卡洛夫（食死徒，将功赎罪被释放）</li></ul></li></ul><h3 id="霍格沃兹地图"><a href="#霍格沃兹地图" class="headerlink" title="霍格沃兹地图"></a>霍格沃兹地图</h3><p><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Cmap1.png" alt="map1" title="霍格沃兹地图1"><br><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Cmap2.png" alt="map2" title="霍格沃兹地图1"><br><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Cmap3.png" alt="map3" title="霍格沃兹地图1"><br><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Cmap4.png" alt="map4" title="霍格沃兹地图1"></p><h3 id="魁地奇规则"><a href="#魁地奇规则" class="headerlink" title="魁地奇规则"></a>魁地奇规则</h3><p><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Cball.png" alt="ball" title="魁地奇规则"></p><h3 id="霍格沃兹一年级必修课"><a href="#霍格沃兹一年级必修课" class="headerlink" title="霍格沃兹一年级必修课"></a>霍格沃兹一年级必修课</h3><p><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Csubject1.png" alt="subject" title="必修课"></p><h3 id="神圣28纯血家族"><a href="#神圣28纯血家族" class="headerlink" title="神圣28纯血家族"></a>神圣28纯血家族</h3><p><img src="D:%5Ckaaaaaaious.github.io%5Csource_posts%5Csacred28.png" alt="28" title="纯血28家族"></p><h2 id="剧情-TMI"><a href="#剧情-TMI" class="headerlink" title="剧情 TMI"></a>剧情 TMI</h2><h3 id="伏地魔控制金妮开启密室"><a href="#伏地魔控制金妮开启密室" class="headerlink" title="伏地魔控制金妮开启密室"></a>伏地魔控制金妮开启密室</h3><ul><li>在对角巷，日记被卢修斯放到金妮的书桶里</li><li>金妮跟日记交流太多有了情感依赖，汤姆灵魂进入她的身体</li><li>金妮清醒，把日记丢在洗手间，打中桃金娘</li><li>桃金娘淹了洗手间，哈利去查看，日记被哈利发现</li><li>金妮害怕，偷回日记。汤姆控制金妮</li><li>金妮越虚弱汤姆越强大，最终灵魂实体化</li></ul><h3 id="哈利打败蛇怪"><a href="#哈利打败蛇怪" class="headerlink" title="哈利打败蛇怪"></a>哈利打败蛇怪</h3><ul><li>哈利的忠心召唤出福克斯，福克斯带来分院帽</li><li>哈利戴着分院帽求助，召唤出格兰芬多之剑杀了蛇怪</li><li>哈利被毒牙所伤，福克斯眼泪治愈哈利伤口</li><li>哈利用毒牙毁了日记本</li></ul><h3 id="哈利得到The-Marauder’s-Map"><a href="#哈利得到The-Marauder’s-Map" class="headerlink" title="哈利得到The Marauder’s Map"></a>哈利得到The Marauder’s Map</h3><ul><li>地图被费尔奇（宿管）没收</li><li>弗莱德和乔治从费尔奇那里偷拿</li><li>送给哈利</li></ul><h3 id="小天狼星越狱"><a href="#小天狼星越狱" class="headerlink" title="小天狼星越狱"></a>小天狼星越狱</h3><ul><li>韦斯莱一家中了预言家日报抽奖700金加隆，上报</li><li>魔法部部长福吉去阿兹卡班视察，小天狼星问福吉要他手上的报纸看</li><li>看到韦斯莱一家照片，认出罗恩的老鼠斑斑是彼得（斑斑是珀西传给罗恩的）</li><li>报纸写罗恩他们假期后要回霍格沃兹，担心彼得伤害哈利</li><li>变大黑狗越狱（摄魂兽对动物不敏感）</li></ul><h2 id="伏地魔重返魔法界"><a href="#伏地魔重返魔法界" class="headerlink" title="伏地魔重返魔法界"></a>伏地魔重返魔法界</h2><ul><li>魔法部员工乔金斯去老克劳奇家要签名，发现家庭精灵闪闪在和空气说话</li><li>乔金斯发现小克劳奇没死，生活在隐形斗篷下（被他爸施了夺魂咒）</li><li>老克劳奇修改乔金斯记忆</li><li>乔金斯去阿尔巴尼亚（伏地魔所在地）度假</li><li>乔金斯偶遇彼得，彼得骗她去见伏地魔</li><li>伏地魔发现乔金斯记忆被修改过，读取记忆</li><li>伏地魔得知小克劳奇没死，即将举办三强争霸赛&amp;世界魁地奇大赛，穆迪要上任霍格沃兹黑魔法防御课老师</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery使用指南</title>
      <link href="/2020/04/02/jQuery%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97-0/"/>
      <url>/2020/04/02/jQuery%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97-0/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery使用指南"><a href="#jQuery使用指南" class="headerlink" title="jQuery使用指南"></a>jQuery使用指南</h1><p><strong>本文非原创，来源不明，仅供个人学习，如侵权会及时删除。</strong></p><h2 id="为什么要学jquery"><a href="#为什么要学jquery" class="headerlink" title="为什么要学jquery"></a>为什么要学jquery</h2><p>使用javascript开发过程中，有许多的缺点：</p><ol><li>查找元素的方法单一，麻烦。</li><li>遍历数组很麻烦，通常要嵌套一大堆的for循环。</li><li>有兼容性问题。</li><li>想要实现简单的动画效果，也很麻烦</li><li>代码冗余。</li></ol><h2 id="体验jquery的使用"><a href="#体验jquery的使用" class="headerlink" title="体验jquery的使用"></a>体验jquery的使用</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/** 1. 查找元素的方法多种多样，非常灵活* 2. 拥有隐式迭代特性，因此不再需要手写for循环了。* 3. 完全没有兼容性问题。* 4. 实现动画非常简单，而且功能更加的强大。* 5. 代码简单、粗暴。* */</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"我是内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="jquery到底是什么"><a href="#jquery到底是什么" class="headerlink" title="jquery到底是什么"></a>jquery到底是什么</h2><blockquote><p>jQuery的官网 <a href="http://jquery.com/" target="_blank" rel="noopener">http://jquery.com/</a><br>jQuery就是一个js库，使用jQuery的话，会比使用JavaScript更简单。</p></blockquote><p><strong>What is jQuery?</strong></p><pre class=" language-text"><code class="language-text">   jQuery is a fast, small, and feature-rich JavaScript library.    It makes things like HTML document traversal and manipulation,    event handling, animation, and Ajax    much simpler with an easy-to-use API that works across a multitude of browsers.    With a combination of versatility and extensibility,    jQuery has changed the way that millions of people write JavaScript. </code></pre><p>js库：把一些常用到的方法写到一个单独的js文件，使用的时候直接去引用这js文件就可以了。<br>（animate.js、common.js）</p><p>我们知道了，jQuery其实就是一个js文件，里面封装了一大堆的方法方便我们的开发，<br>其实就是一个加强版的common.js，因此我们学习jQuery，其实就是学习jQuery这个js文件中封装的一大堆方法。</p><h2 id="jquery的版本问题"><a href="#jquery的版本问题" class="headerlink" title="jquery的版本问题"></a>jquery的版本问题</h2><blockquote><p>官网下载地址：<a href="http://jquery.com/download/" target="_blank" rel="noopener">http://jquery.com/download/</a><br>jQuery版本有很多，分为1.x 2.x 3.x<br>1.x和2.x版本jquery都不再更新版本了，现在只更新3.x版本。</p></blockquote><p>大版本分类：</p><ul><li>1.x版本：能够兼容IE678浏览器</li><li>2.x版本：不能兼容IE678浏览器</li><li>3.x版本：不能兼容IE678浏览器，更加的精简（在国内不流行，因为国内使用jQuery的主要目的就是兼容IE678）</li></ul><p>关于压缩版和未压缩版：  </p><ul><li>jquery-1.12.4.min.js:压缩版本，适用于生产环境，因为文件比较小，去除了注释、换行、空格等东西，但是基本没有颗阅读性。</li><li>jquery-1.12.4.js:未压缩版本，适用于学习与开发环境，源码清晰，易阅读。</li></ul><h2 id="jquery的入口函数"><a href="#jquery的入口函数" class="headerlink" title="jquery的入口函数"></a>jquery的入口函数</h2><p>使用jQuery的三个步骤：</p><ol><li>引入jQuery文件</li><li>入口函数</li><li>功能实现</li></ol><p>关于jQuery的入口函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//第一种写法</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//第二种写法</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>jQuery入口函数与js入口函数的对比：</p><ol><li>JavaScript的入口函数要等到页面中所有资源（包括图片、文件）加载完成才开始执行。</li><li>jQuery的入口函数只会等待文档树加载完成就开始执行，并不会等待图片、文件的加载。</li></ol><h2 id="jq对象和dom对象-重要"><a href="#jq对象和dom对象-重要" class="headerlink" title="jq对象和dom对象(重要)"></a>jq对象和dom对象(重要)</h2><ol><li>DOM对象：使用JavaScript中的方法获取页面中的元素返回的对象就是dom对象。</li><li>jQuery对象：jquery对象就是使用jquery的方法获取页面中的元素返回的对象就是jQuery对象。</li><li>jQuery对象其实就是DOM对象的包装集<strong>包装了DOM对象的集合（伪数组）</strong></li><li>DOM对象与jQuery对象的方法不能混用。</li></ol><p>DOM对象转换成jQuery对象：【联想记忆：花钱】</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> $obj <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>domObj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// $(document).ready(function(){});就是典型的DOM对象转jQuery对象</span></code></pre><p>jQuery对象转换成DOM对象：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> $li <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//第一种方法（推荐使用）</span>$li<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">//第二种方法</span>$li<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></code></pre><h2 id="jquery选择器"><a href="#jquery选择器" class="headerlink" title="jquery选择器"></a>jquery选择器</h2><h3 id="什么是jQuery选择器"><a href="#什么是jQuery选择器" class="headerlink" title="什么是jQuery选择器"></a>什么是jQuery选择器</h3><ul><li>jQuery选择器是jQuery为我们提供的一组方法，让我们更加方便的获取到页面中的元素。<br>注意：jQuery选择器返回的是jQuery对象。</li><li>jQuery选择器有很多，基本兼容了CSS1到CSS3所有的选择器，并且jQuery还添加了很多扩展性的选择器。<br>【查看jQuery文档】</li><li>jQuery选择器虽然很多，但是选择器之间可以相互替代，就是说获取一个元素，你会有很多种方法获取到。<br>所以我们平时真正能用到的只是少数的最常用的选择器。</li></ul><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th align="left">描述</th></tr></thead><tbody><tr><td>ID选择器</td><td>$(“#id”);</td><td align="left">获取指定ID的元素</td></tr><tr><td>类选择器</td><td>$(“.class”);</td><td align="left">获取同一类class的元素</td></tr><tr><td>标签选择器</td><td>$(“div”);</td><td align="left">获取同一类标签的所有元素</td></tr><tr><td>并集选择器</td><td>$(“div,p,li”);</td><td align="left">使用逗号分隔，只要符合条件之一就可。</td></tr><tr><td>交集选择器</td><td>$(“div.redClass”);</td><td align="left">获取class为redClass的div元素</td></tr></tbody></table><blockquote><p>总结：跟css的选择器用法一模一样。</p></blockquote><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th align="left">描述</th></tr></thead><tbody><tr><td>子代选择器</td><td>$(“ul&gt;li”);</td><td align="left">使用&gt;号，获取儿子层级的元素，注意，并不会获取孙子层级的元素</td></tr><tr><td>后代选择器</td><td>$(“ul li”);</td><td align="left">使用空格，代表后代选择器，获取ul下的所有li元素，包括孙子等</td></tr></tbody></table><blockquote><p>总结：跟css的选择器用法一模一样。</p></blockquote><h3 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th align="left">描述</th></tr></thead><tbody><tr><td>:eq（index）</td><td>$(“li:eq(2)”).css(“color”, ”red”);</td><td align="left">获取到的li元素中，选择索引号为2的元素，索引号index从0开始。</td></tr><tr><td>:odd</td><td>$(“li:odd”).css(“color”, ”red”);</td><td align="left">获取到的li元素中，选择索引号为奇数的元素</td></tr><tr><td>:even</td><td>$(“li:even”).css(“color”, ”red”);</td><td align="left">获取到的li元素中，选择索引号为偶数的元素</td></tr></tbody></table><blockquote><p>总结：这类选择器都带冒号</p></blockquote><h3 id="筛选选择器-方法"><a href="#筛选选择器-方法" class="headerlink" title="筛选选择器(方法)"></a>筛选选择器(方法)</h3><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>children(selector)</td><td>$(“ul”).children(“li”)</td><td>相当于$(“ul&gt;li”)，子类选择器</td></tr><tr><td>find(selector)</td><td>$(“ul”).find(“li”);</td><td>相当于$(“ul li”),后代选择器</td></tr><tr><td>siblings(selector)</td><td>$(“#first”).siblings(“li”);</td><td>查找兄弟节点，不包括自己本身。</td></tr><tr><td>parent()</td><td>$(“#first”).parent();</td><td>查找父亲</td></tr><tr><td>eq(index)</td><td>$(“li”).eq(2);</td><td>相当于$(“li:eq(2)”),index从0开始</td></tr><tr><td>next()</td><td>$(“li”).next()</td><td>找下一个兄弟</td></tr><tr><td>prev()</td><td>$(“li”).prev()</td><td>找上一次兄弟</td></tr></tbody></table><blockquote><p>总结：筛选选择器的功能与过滤选择器有点类似，但是用法不一样，筛选选择器主要是方法。</p></blockquote><p>【案例：下拉菜单】<br>【案例：突出展示】<br>【案例：手风琴】<br>【案例：淘宝精品】</p><h2 id="元素设置"><a href="#元素设置" class="headerlink" title="元素设置"></a>元素设置</h2><h3 id="样式设置"><a href="#样式设置" class="headerlink" title="样式设置"></a>样式设置</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*1.设置一个样式*/</span>    <span class="token comment" spellcheck="true">//两个参数  设置的样式属性,具体样式</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//传入对象（设置的样式属性:具体样式）</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'red'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.设置多个样式*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'green'</span><span class="token punctuation">,</span>        <span class="token string">'font-size'</span><span class="token punctuation">:</span><span class="token string">'20px'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="类名设置"><a href="#类名设置" class="headerlink" title="类名设置"></a>类名设置</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*1.添加一个类*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.删除一个类*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*3.切换一个类  有就删除没有就添加*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*4.匹配一个类  判断是否包含某个类  如果包含返回true否知返回false*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《tab切换》</code></p><h3 id="属性设置"><a href="#属性设置" class="headerlink" title="属性设置"></a>属性设置</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*1.获取属性*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.设置属性*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*3.设置多个属性*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'tom'</span><span class="token punctuation">,</span>        <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token string">'18'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*4.删除属性*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《美女相册》</code></p><h3 id="prop方法"><a href="#prop方法" class="headerlink" title="prop方法"></a>prop方法</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*对于布尔类型的属性，不要attr方法，应该用prop方法 prop用法跟attr方法一样。*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#checkbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#checkbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#checkbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#checkbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeProp</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《表格全选》</code></p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="基本动画"><a href="#基本动画" class="headerlink" title="基本动画"></a>基本动画</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*注意：动画的本质是改变容器的大小和透明度*/</span>    <span class="token comment" spellcheck="true">/*注意：如果不传参数是看不到动画*/</span>    <span class="token comment" spellcheck="true">/*注意：可传入特殊的字符  fast normal slow*/</span>    <span class="token comment" spellcheck="true">/*注意：可传入数字 单位毫秒*/</span>    <span class="token comment" spellcheck="true">/*1.展示动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.隐藏动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*3.切换展示和隐藏*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="滑入滑出"><a href="#滑入滑出" class="headerlink" title="滑入滑出"></a>滑入滑出</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*注意：动画的本质是改变容器的高度*/</span>    <span class="token comment" spellcheck="true">/*1.滑入动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.滑出动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*3.切换滑入滑出*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《下拉菜单》</code></p><h3 id="淡入淡出"><a href="#淡入淡出" class="headerlink" title="淡入淡出"></a>淡入淡出</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*注意：动画的本质是改变容器的透明度*/</span>    <span class="token comment" spellcheck="true">/*1.淡入动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.淡出动画*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*3.切换淡入淡出*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token string">'speed'</span><span class="token punctuation">,</span><span class="token string">'opacity'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《轮播图》</code></p><h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*    * 自定义动画    * 参数1：需要做动画的属性    * 参数2：需要执行动画的总时长    * 参数3：执行动画的时候的速度    * 参数4：执行动画完成之后的回调函数    * */</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>left<span class="token punctuation">:</span><span class="token number">800</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>left<span class="token punctuation">:</span><span class="token number">800</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">'linear'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box3'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>left<span class="token punctuation">:</span><span class="token number">800</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">'swing'</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'动画执行完成'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《手风琴菜单》</code></p><h3 id="动画队列"><a href="#动画队列" class="headerlink" title="动画队列"></a>动画队列</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*    jQuery中有个动画队列的机制。    当我们对一个对象添加多次动画效果时后添加的动作就会被放入这个动画队列中，      等前面的动画完成后再开始执行。    可是用户的操作往往都比动画快，      如果用户对一个对象频繁操作时不处理动画队列就会造成队列堆积，    影响到效果。    */</span></code></pre><h3 id="stop使用"><a href="#stop使用" class="headerlink" title="stop使用"></a>stop使用</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*1.停止当前动画  如果动画队列当中还有动画立即执行*/</span>    <span class="token comment" spellcheck="true">//$('div').stop();</span>    <span class="token comment" spellcheck="true">/*2.和stop()效果一致  说明这是默认设置*/</span>    <span class="token comment" spellcheck="true">//$('div').stop(false,false);</span>    <span class="token comment" spellcheck="true">/*3.停止当前动画  清除动画队列*/</span>    <span class="token comment" spellcheck="true">//$('div').stop(true,false);</span>    <span class="token comment" spellcheck="true">/*4.停止当前动画并且到结束位置  清除了动画队列*/</span>    <span class="token comment" spellcheck="true">//$('div').stop(true,true);</span>    <span class="token comment" spellcheck="true">/*5.停止当前动画并且到结束位置  如果动画队列当中还有动画立即执行*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对应案例：<code>案例-《音乐导航》</code><br>对应案例：<code>案例-《工具栏》</code></p><h2 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h2><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*创建节点*/</span>    <span class="token keyword">var</span> $a <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="http://www.baidu.com" target="_blank">百度1&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*如果想克隆事件  false  true克隆事件*/</span>    <span class="token keyword">var</span> $cloneP <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="添加-amp-移动节点"><a href="#添加-amp-移动节点" class="headerlink" title="添加&amp;移动节点"></a>添加&amp;移动节点</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*追加自身的最后面  传对象和html格式代码*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="http://www.baidu.com" target="_blank">&lt;b>百度3&lt;/b>&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*追加到目标元素最后面  传目标元素的选择器或者对象*/</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="http://www.baidu.com" target="_blank">&lt;b>百度3&lt;/b>&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">prepend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">prependTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="删除节点-amp-清空节点"><a href="#删除节点-amp-清空节点" class="headerlink" title="删除节点&amp;清空节点"></a>删除节点&amp;清空节点</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">/*1.清空box里面的元素*/</span>    <span class="token comment" spellcheck="true">/* 清理门户 */</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*2.删除某个元素*/</span>    <span class="token comment" spellcheck="true">/* 自杀 */</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>【案例-《弹幕》】</p><h2 id="jQuery特殊属性操作"><a href="#jQuery特殊属性操作" class="headerlink" title="jQuery特殊属性操作"></a>jQuery特殊属性操作</h2><h3 id="val方法"><a href="#val方法" class="headerlink" title="val方法"></a>val方法</h3><blockquote><p>val方法用于设置和获取表单元素的值，例如input、textarea的值</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//设置值</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">'张三'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取值</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="html方法与text方法"><a href="#html方法与text方法" class="headerlink" title="html方法与text方法"></a>html方法与text方法</h3><blockquote><p>html方法相当于innerHTML  text方法相当于innerText</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//设置内容</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">'&lt;span>这是一段内容&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取内容</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//设置内容</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'&lt;span>这是一段内容&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取内容</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>区别：html方法会识别html标签，text方法会那内容直接当成字符串，并不会识别html标签。</p><h3 id="width方法与height方法"><a href="#width方法与height方法" class="headerlink" title="width方法与height方法"></a>width方法与height方法</h3><blockquote><p>设置或者获取高度</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//带参数表示设置高度</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//不带参数获取高度</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>获取网页的可视区宽高</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//获取可视区宽度</span>    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取可视区高度</span>    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="scrollTop与scrollLeft"><a href="#scrollTop与scrollLeft" class="headerlink" title="scrollTop与scrollLeft"></a>scrollTop与scrollLeft</h3><blockquote><p>设置或者获取垂直滚动条的位置</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//获取页面被卷曲的高度</span>    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取页面被卷曲的宽度</span>    <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="offset方法与position方法"><a href="#offset方法与position方法" class="headerlink" title="offset方法与position方法"></a>offset方法与position方法</h3><blockquote><p>offset方法获取元素距离document的位置，position方法获取的是元素距离有定位的父元素的位置。</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//获取元素距离document的位置,返回值为对象：{left:100, top:100}</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取相对于其最近的有定位的父元素的位置。</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="jQuery事件机制"><a href="#jQuery事件机制" class="headerlink" title="jQuery事件机制"></a>jQuery事件机制</h2><blockquote><p>JavaScript中已经学习过了事件，但是jQuery对JavaScript事件进行了封装，增加并扩展了事件处理机制。jQuery不仅提供了更加优雅的事件处理语法，而且极大的增强了事件的处理能力。</p></blockquote><h3 id="jQuery事件发展历程-了解"><a href="#jQuery事件发展历程-了解" class="headerlink" title="jQuery事件发展历程(了解)"></a>jQuery事件发展历程(了解)</h3><p>简单事件绑定&gt;&gt;bind事件绑定&gt;&gt;delegate事件绑定&gt;&gt;on事件绑定(推荐)</p><blockquote><p>简单事件注册</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token function">click</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//单击事件</span>    <span class="token function">mouseenter</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//鼠标进入事件</span>    <span class="token function">mouseleave</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//鼠标离开事件</span></code></pre><p>缺点：不能同时注册多个事件</p><blockquote><p>bind方式注册事件</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//第一个参数：事件类型</span>    <span class="token comment" spellcheck="true">//第二个参数：事件处理程序</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"click mouseenter"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//事件响应方法</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>缺点：不支持动态事件绑定</p><blockquote><p>delegate注册委托事件</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 第一个参数：selector，要绑定事件的元素</span>    <span class="token comment" spellcheck="true">// 第二个参数：事件类型</span>    <span class="token comment" spellcheck="true">// 第三个参数：事件处理函数</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".parentBox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//为 .parentBox下面的所有的p标签绑定事件</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>缺点：只能注册委托事件，因此注册时间需要记得方法太多了</p><blockquote><p>on注册事件</p></blockquote><h3 id="on注册事件-重点"><a href="#on注册事件-重点" class="headerlink" title="on注册事件(重点)"></a>on注册事件(重点)</h3><blockquote><p>jQuery1.7之后，jQuery用on统一了所有事件的处理方法。</p><p>最现代的方式，兼容zepto(移动端类似jQuery的一个库)，强烈建议使用。</p></blockquote><p>on注册简单事件</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 表示给$(selector)绑定事件，并且由自己触发，不支持动态绑定。</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span> <span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>on注册委托事件</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 表示给$(selector)绑定代理事件，当必须是它的内部元素span才能触发这个事件，支持动态绑定</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span> <span class="token string">"click"</span><span class="token punctuation">,</span><span class="token string">'span'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>on注册事件的语法：</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 第一个参数：events，绑定事件的名称可以是由空格分隔的多个事件（标准事件或者自定义事件）</span>    <span class="token comment" spellcheck="true">// 第二个参数：selector, 执行事件的后代元素（可选），如果没有后代元素，那么事件将有自己执行。</span>    <span class="token comment" spellcheck="true">// 第三个参数：data，传递给处理函数的数据，事件触发的时候通过event.data来使用（不常使用）</span>    <span class="token comment" spellcheck="true">// 第四个参数：handler，事件处理函数</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>events<span class="token punctuation">,</span><span class="token punctuation">[</span>selector<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="事件解绑"><a href="#事件解绑" class="headerlink" title="事件解绑"></a>事件解绑</h3><blockquote><p>unbind方式（不用）</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解绑所有的事件</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解绑指定的事件</span></code></pre><blockquote><p>undelegate方式（不用）</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span> selector <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">undelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解绑所有的delegate事件</span>    <span class="token function">$</span><span class="token punctuation">(</span> selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">undelegate</span><span class="token punctuation">(</span> <span class="token string">'click'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解绑所有的click事件</span></code></pre><blockquote><p>off方式（推荐）</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 解绑匹配元素的所有事件</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 解绑匹配元素的所有click事件</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//触发 click事件</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="jQuery事件对象"><a href="#jQuery事件对象" class="headerlink" title="jQuery事件对象"></a>jQuery事件对象</h3><p>jQuery事件对象其实就是js事件对象的一个封装，处理了兼容性。</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//screenX和screenY    对应屏幕最左上角的值</span>    <span class="token comment" spellcheck="true">//clientX和clientY    距离页面左上角的位置（忽视滚动条）</span>    <span class="token comment" spellcheck="true">//pageX和pageY    距离页面最顶部的左上角的位置（会计算滚动条的距离）</span>    <span class="token comment" spellcheck="true">//event.keyCode    按下的键盘代码</span>    <span class="token comment" spellcheck="true">//event.data    存储绑定事件时传递的附加数据</span>    <span class="token comment" spellcheck="true">//event.stopPropagation()    阻止事件冒泡行为</span>    <span class="token comment" spellcheck="true">//event.preventDefault()    阻止浏览器默认行为</span>    <span class="token comment" spellcheck="true">//return false:既能阻止事件冒泡，又能阻止浏览器默认行为。</span></code></pre><h2 id="jQuery补充知识点"><a href="#jQuery补充知识点" class="headerlink" title="jQuery补充知识点"></a>jQuery补充知识点</h2><h3 id="链式编程"><a href="#链式编程" class="headerlink" title="链式编程"></a>链式编程</h3><blockquote><p>通常情况下，只有设置操作才能把链式编程延续下去。因为获取操作的时候，会返回获取到的相应的值，无法返回 jQuery对象。</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 筛选选择器会改变jQuery对象的DOM对象，想要回复到上一次的状态，并且返回匹配元素之前的状态。</span></code></pre><p>【案例：五角星评分案例.html】</p><h3 id="each方法"><a href="#each方法" class="headerlink" title="each方法"></a>each方法</h3><blockquote><p>jQuery的隐式迭代会对所有的DOM对象设置相同的值，但是如果我们需要给每一个对象设置不同的值的时候，就需要自己进行迭代了。</p></blockquote><p>作用：遍历jQuery对象集合，为每个匹配的元素执行一个函数</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// 参数一表示当前元素在所有匹配元素中的索引号</span>    <span class="token comment" spellcheck="true">// 参数二表示当前元素（DOM对象）</span>    <span class="token function">$</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>【案例：不同的透明度.html】</p><h3 id="多库共存"><a href="#多库共存" class="headerlink" title="多库共存"></a>多库共存</h3><blockquote><p>jQuery使用$作为标示符，但是如果与其他框架中的$冲突时，jQuery可以释放$符的控制权.</p></blockquote><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> c <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//释放$的控制权,并且把$的能力给了c</span></code></pre><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><blockquote><p>插件：jquery不可能包含所有的功能，我们可以通过插件扩展jquery的功能。</p><p>jQuery有着丰富的插件，使用这些插件能给jQuery提供一些额外的功能。</p></blockquote><ol><li>jquery.color.js</li></ol><blockquote><p>animate不支持颜色的渐变，但是使用了jquery.color.js后，就可以支持颜色的渐变了。</p></blockquote><p>使用插件的步骤</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//1. 引入jQuery文件</span>    <span class="token comment" spellcheck="true">//2. 引入插件（如果有用到css的话，需要引入css）</span>    <span class="token comment" spellcheck="true">//3. 使用插件</span></code></pre><ol start="2"><li>jquery.lazyload.js</li></ol><p>懒加载插件</p><h3 id="jquery-ui-js插件"><a href="#jquery-ui-js插件" class="headerlink" title="jquery.ui.js插件"></a>jquery.ui.js插件</h3><p>jQueryUI专指由jQuery官方维护的UI方向的插件。</p><p>官方API：<a href="http://api.jqueryui.com/category/all/" target="_blank" rel="noopener">http://api.jqueryui.com/category/all/</a></p><p>其他教程：<a href="http://www.runoob.com/jqueryui/jqueryui-tutorial.html" target="_blank" rel="noopener">jQueryUI教程</a></p><p>基本使用:</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//1.    引入jQueryUI的样式文件</span>    <span class="token comment" spellcheck="true">//2.    引入jQuery</span>    <span class="token comment" spellcheck="true">//3.    引入jQueryUI的js文件</span>    <span class="token comment" spellcheck="true">//4.    使用jQueryUI功能</span></code></pre><p>使用jquery.ui.js手风琴菜单</p><h2 id="制作jquery插件"><a href="#制作jquery插件" class="headerlink" title="制作jquery插件"></a>制作jquery插件</h2><blockquote><p>原理：jquery插件其实说白了就是给jquery对象增加一个新的方法，让jquery对象拥有某一个功能。</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//通过给$.fn添加方法就能够扩展jquery对象</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span> pluginName <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端笔记03</title>
      <link href="/2020/04/02/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B003/"/>
      <url>/2020/04/02/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B003/</url>
      
        <content type="html"><![CDATA[<h1 id="前端笔记03"><a href="#前端笔记03" class="headerlink" title="前端笔记03"></a>前端笔记03</h1><h2 id="req-params-req-query-req-body的区别"><a href="#req-params-req-query-req-body的区别" class="headerlink" title="req.params,req.query,req.body的区别"></a>req.params,req.query,req.body的区别</h2><h3 id="req-params"><a href="#req-params" class="headerlink" title="req.params"></a>req.params</h3><p>用在<strong>get</strong>请求当中<br>url： <a href="http://localhost:3000/books/book/1" target="_blank" rel="noopener">http://localhost:3000/books/book/1</a><br>使用：把请求 / 后面的参数当成id，通过req.params就能获取到id<br>实例：</p><pre class=" language-javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/books/book/:id'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="req-query"><a href="#req-query" class="headerlink" title="req.query"></a>req.query</h3><p>用在<strong>get</strong>请求当中<br>url：<a href="http://localhost:3000/toEditBook?id=1" target="_blank" rel="noopener">http://localhost:3000/toEditBook?id=1</a><br>实例：</p><pre class=" language-javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"/toEditBook"</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="req-body"><a href="#req-body" class="headerlink" title="req.body"></a>req.body</h3><p>用在<strong>post</strong>请求当中<br>需要使用body-parser包</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 处理请求参数</span><span class="token comment" spellcheck="true">// 挂载参数处理中间件（post）</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 处理json格式的参数，不是必须的</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>参考链接：<a href="https://www.jianshu.com/p/6290babbbc4a" target="_blank" rel="noopener">https://www.jianshu.com/p/6290babbbc4a</a></p><p>##jQuery语法速成<br>视频教程：<a href="https://www.bilibili.com/video/BV1Vx411R7ZW" target="_blank">jQuery基础</a></p><h2 id="一些tips"><a href="#一些tips" class="headerlink" title="一些tips"></a>一些tips</h2><h3 id="res-json"><a href="#res-json" class="headerlink" title="res.json()"></a>res.json()</h3><p>真实项目中，服务器端大多采用JSON对象作为响应数据的格式。<br>res.json([body])发送JSON响应。<br>该方法res.send()与将对象或数组作为参数相同。<br>即res.json()就是 res.send([body])方法中参数是Array 或 Object的情况， ‘content-type’: ‘application/json’。</p><p>参考链接：<a href="https://blog.csdn.net/m0_37263637/article/details/79753342" target="_blank" rel="noopener">https://blog.csdn.net/m0_37263637/article/details/79753342</a></p><h3 id="href-”javascript"><a href="#href-”javascript" class="headerlink" title="href=”javascript:;"></a>href=”javascript:;</h3><p>“href=”javascript:;”表示去掉a标签的默认行为。<br>“javascript:”是表示在触发&lt;a&gt;默认动作时，执行一段JavaScript代码，而 javascript:; 表示什么都不执行，这样点击&lt;a&gt;时就没有任何反应。一般在这种情况下，会给绑定一个事件回调，来执行业务。</p><h3 id="项目部分js代码解析"><a href="#项目部分js代码解析" class="headerlink" title="项目部分js代码解析"></a>项目部分js代码解析</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化数据列表</span>    <span class="token keyword">function</span> <span class="token function">initList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type <span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url <span class="token punctuation">:</span> <span class="token string">'/books'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 回调函数得到数据类型</span>            dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//  success(result,status,xhr)    当请求成功时运行的函数。</span>            <span class="token comment" spellcheck="true">// 第一个参数result是请求返回的结果，是一个json数组</span>            success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渲染数据列表，得到html内容</span>                <span class="token comment" spellcheck="true">// data数组里面的每个值是一个对象，list是data的别名</span>                <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">template</span><span class="token punctuation">(</span><span class="token string">'indexTpl'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>list <span class="token punctuation">:</span> data<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// .html方法会识别html标签，.text方法会那内容直接当成字符串，并不会识别html标签。</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#dataList'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 必须在渲染完成内容之后才可以操作DOM标签</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#dataList'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// :eq（index）  </span>                    <span class="token comment" spellcheck="true">// 获取到的td元素中，选择索引号为5的元素，索引号index从0开始。</span>                    <span class="token keyword">var</span> td <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'td:eq(5)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取编辑/删除按钮</span>                    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'td:eq(0)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取id</span>                    <span class="token comment" spellcheck="true">// 绑定编辑图书的单击事件</span>                    td<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'a:eq(0)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">editBook</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 绑定删除图书的单击事件</span>                    td<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'a:eq(1)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">deleteBook</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 绑定添加图书信息的单击事件</span>                    <span class="token function">addBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 重置表单</span>                    <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addBookForm'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//iquery对象</span>                    form<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//转为dom对象并调用原生方法</span>                    <span class="token comment" spellcheck="true">// type为hidden的元素无法用reset()重置</span>                    form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[type=hidden]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">initList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 删除图书信息</span>    <span class="token keyword">function</span> <span class="token function">deleteBook</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type <span class="token punctuation">:</span> <span class="token string">'delete'</span><span class="token punctuation">,</span>            url <span class="token punctuation">:</span> <span class="token string">'/books/book/'</span> <span class="token operator">+</span> id<span class="token punctuation">,</span>            dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 删除图书信息之后重新渲染数据列表</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>flag <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">initList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 编辑图书信息</span>    <span class="token keyword">function</span> <span class="token function">editBook</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addBookForm'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 先根据数据id查询最新的数据</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type <span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url <span class="token punctuation">:</span> <span class="token string">'/books/book/'</span> <span class="token operator">+</span> id<span class="token punctuation">,</span>            dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 初始化弹窗</span>                <span class="token keyword">var</span> mark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MarkBox</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token string">'编辑图书'</span><span class="token punctuation">,</span>form<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mark<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 填充表单数据</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[name=id]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//val()是赋值操作</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[name=name]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[name=author]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[name=category]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[name=description]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 对表单提交按钮重新绑定单击事件</span>                form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[type=button]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 编辑完成数据之后重新提交表单</span>                    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        type <span class="token punctuation">:</span> <span class="token string">'put'</span><span class="token punctuation">,</span>                        url <span class="token punctuation">:</span> <span class="token string">'/books/book'</span><span class="token punctuation">,</span>                        <span class="token comment" spellcheck="true">// .serialize() 方法创建以标准 URL 编码表示的文本字符串。它的操作对象是代表表单元素集合的 jQuery 对象。</span>                        data <span class="token punctuation">:</span> form<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                         dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>                        success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>flag <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                <span class="token comment" spellcheck="true">// 隐藏弹窗</span>                                mark<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">// 重新渲染数据列表</span>                                <span class="token function">initList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 添加图书信息</span>    <span class="token keyword">function</span> <span class="token function">addBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addBookId'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addBookForm'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 实例化弹窗对象</span>            <span class="token keyword">var</span> mark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MarkBox</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token string">'添加图书'</span><span class="token punctuation">,</span>form<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mark<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            form<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'input[type=button]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    type <span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>                    url <span class="token punctuation">:</span> <span class="token string">'/books/book'</span><span class="token punctuation">,</span>                    data <span class="token punctuation">:</span> form<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>                    success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>flag <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// 关闭弹窗</span>                            mark<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 添加图书成功之后重新渲染数据列表</span>                            <span class="token function">initList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 查询天气</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#weather'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> cityCode <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'select option:selected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type <span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url <span class="token punctuation">:</span> <span class="token string">'/weather/'</span> <span class="token operator">+</span> cityCode<span class="token punctuation">,</span>            dataType <span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">template</span><span class="token punctuation">(</span><span class="token string">'weatherTpl'</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> mark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MarkBox</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token string">'天气信息'</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mark<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端笔记02</title>
      <link href="/2020/03/31/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B002/"/>
      <url>/2020/03/31/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B002/</url>
      
        <content type="html"><![CDATA[<h1 id="前端笔记02"><a href="#前端笔记02" class="headerlink" title="前端笔记02"></a>前端笔记02</h1><h2 id="part1-数据库所需软件安装"><a href="#part1-数据库所需软件安装" class="headerlink" title="part1 数据库所需软件安装"></a>part1 数据库所需软件安装</h2><h3 id="WampServer的下载方法"><a href="#WampServer的下载方法" class="headerlink" title="WampServer的下载方法"></a>WampServer的下载方法</h3><p><a href="https://www.cnblogs.com/Sabre/p/6728818.html" target="_blank">WampServer的下载方法</a> 亲测有效</p><h3 id="Navicat-premium-15-的下载和激活"><a href="#Navicat-premium-15-的下载和激活" class="headerlink" title="Navicat premium 15 的下载和激活"></a>Navicat premium 15 的下载和激活</h3><p><a href="https://www.cnblogs.com/asio/p/12208841.html" target="_blank">Navicat premium15 的下载和激活</a> 亲测有效</p><h2 id="part2-一些补充"><a href="#part2-一些补充" class="headerlink" title="part2 一些补充"></a>part2 一些补充</h2><p>学到这里开始产生疑问：<a href="https://www.bilibili.com/video/BV11x41197VK?p=62" target="_blank">Node.js-前端渲染-后台接口json、jsonp和restful</a></p><h3 id="前端渲染和后端渲染"><a href="#前端渲染和后端渲染" class="headerlink" title="前端渲染和后端渲染"></a>前端渲染和后端渲染</h3><h4 id="后端渲染"><a href="#后端渲染" class="headerlink" title="后端渲染"></a>后端渲染</h4><p><strong>所有页面都是在后台生成的。通过浏览器发送一个请求，得到的内容是一个完整的页面。</strong><br>服务器解析存放在服务器端的模板文件后，浏览器直接收到服务器呈现给用户的最终的HTML字符串。<br>浏览器只进行了HTML的解析，以及在显示器上把HTML所代表的图像显示给用户（通过操作系统提供的，用于使显示器显示内容的系统调用来实现）</p><h4 id="前端渲染"><a href="#前端渲染" class="headerlink" title="前端渲染"></a>前端渲染</h4><p><strong>基于后台接口，通过请求接口返回的数据，将数据渲染出来。后端只写接口，分工更明细。</strong><br>浏览器会从后端得到一些信息，这些信息或许是适用于题主所说的angularjs的模板文件，亦或是JSON等各种数据交换格式所包装的数据，甚至是直接的合法的HTML字符串。这些形式都不重要，重要的是，将这些信息组织排列形成最终可读的HTML字符串是由浏览器来完成的，在形成了HTML字符串之后，再进行显示</p><h4 id="二者比较"><a href="#二者比较" class="headerlink" title="二者比较"></a>二者比较</h4><ul><li>在性能上，后端渲染不如前端渲染，因为后端渲染将所有的HTML生成集中在了一个服务器上，而前端渲染将这部分工作分发到各个终端上。</li><li>对于开发而言，前端渲染能够避免后端开发人员过多的编写HTML代码，后端开发人员只需和前端开发事先商定好数据格式，后端只需将数据生成，用数据交换格式包装，再发送出去就可以了，这样能够使开发人员之间的分工更加明确。</li></ul><p><strong>参考链接：</strong><br><a href="https://blog.csdn.net/zfz5720/article/details/85095845" target="_blank" rel="noopener">https://blog.csdn.net/zfz5720/article/details/85095845</a><br><a href="https://www.jianshu.com/p/14c3c4f61d90" target="_blank" rel="noopener">https://www.jianshu.com/p/14c3c4f61d90</a></p><hr><h3 id="JSON、JSONP-JSON-with-Paddin-的区别"><a href="#JSON、JSONP-JSON-with-Paddin-的区别" class="headerlink" title="JSON、JSONP(JSON with Paddin)的区别"></a>JSON、JSONP(JSON with Paddin)的区别</h3><ul><li>JSON是一种数据交换格式，JSONP是 一种非官方跨域数据交互协议。</li><li>JSON是“暗号”，JSONP则是接头方式。</li><li>JSON是描述信息的格式，JSONP是信息传递双方约定的方法。</li><li>JSON返回的是一串数据，JSONP返回的是脚本代码(包含一个函数调用)</li></ul><h3 id="CORS跨域资源共享"><a href="#CORS跨域资源共享" class="headerlink" title="CORS跨域资源共享"></a>CORS跨域资源共享</h3><h4 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h4><p>浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域。<br>接口在一台服务器（或者端口）上，前端和页面服务在另一台服务器（或者端口）上，从前端获取接口数据出现跨域问题。</p><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><ol><li>修改响应头res.header（”Access-Control-Allow-Origin”,”*”）</li><li>JSONP<br>JSONP原理：我们通过href或者src去请求下来的js脚本/css文件/img图片文件/视频文件都不存在跨域问题，只有通过Ajax请求请求下来的数据才存在跨域问题。<br>JSONP只支持get请求、不支持post请求(类似往页面添加一个script标签，通过src属性去触发对指定地址的请求,故只能是get请求)</li></ol><p><a href="https://www.bilibili.com/video/BV1Kt411E76z?from=search&amp;seid=7319513077122082066" target="_blank">CORS演示案例</a></p><p><strong>参考链接：</strong><br><a href="https://blog.csdn.net/tjcjava/article/details/76468225" target="_blank" rel="noopener">https://blog.csdn.net/tjcjava/article/details/76468225</a><br><a href="https://www.cnblogs.com/guyun/p/4588674.html" target="_blank" rel="noopener">https://www.cnblogs.com/guyun/p/4588674.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端笔记01</title>
      <link href="/2020/03/26/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B001/"/>
      <url>/2020/03/26/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<h1 id="前端笔记01"><a href="#前端笔记01" class="headerlink" title="前端笔记01"></a>前端笔记01</h1><h2 id="Web基础文字教程"><a href="#Web基础文字教程" class="headerlink" title="Web基础文字教程"></a>Web基础文字教程</h2><p><a href="https://www.runoob.com/html/html-tutorial.html" target="_blank">HTML</a><br><a href="https://www.runoob.com/css/css-tutorial.html" target="_blank">CSS</a><br><a href="https://www.runoob.com/js/js-tutorial.html" target="_blank">JavaScript</a><br><a href="https://www.runoob.com/vue2/vue-tutorial.html" target="_blank"> VUE</a>（只适合了解基本语法，可直接看视频教程）</p><h2 id="VUE视频教程"><a href="#VUE视频教程" class="headerlink" title="VUE视频教程"></a>VUE视频教程</h2><p><a href="https://www.bilibili.com/video/BV11s411A7h6?p=168" target="_blank">VUE视频教程</a><br>P38 18.vue-resource发起get、post、jsonp请求<br>P39 19.结合Node手写JSONP服务器剖析JSON<br>从这两p开始吃力，去补node.js和Ajax知识</p><p>👇👇👇</p><h2 id="node-js教程"><a href="#node-js教程" class="headerlink" title="node.js教程"></a>node.js教程</h2><p><a href="https://www.bilibili.com/video/BV11x41197VK?p=37" target="_blank">node.js主教程</a></p><h3 id="其中包括ES6部分内容"><a href="#其中包括ES6部分内容" class="headerlink" title="其中包括ES6部分内容"></a>其中包括<em>ES6</em>部分内容</h3><p>P9-1Node.js基础-ES6-字符串相关扩<br>P10-2Node.js基础-ES6-函数相关扩展<br>P11-3Node.js基础-ES6-箭头函数<br>P12-4.1Node.js基础-Buffer静态方法<br>P13-4Node.js基础-类与继承作</p><p>👇👇👇<br>该教程部分章节缺失，以下为补充内容：<br><a href="https://www.bilibili.com/video/BV1GE411L7is?p=43" target="_blank">get参数处理</a></p><p> <a href="https://www.bilibili.com/video/BV1GE411L7is/" target="_blank">node.js理论基础补充</a><br>P1-浏览器内核（渲染引擎）介绍<br>P2-浏览器渲染引擎工作原理<br>P3-页面reflow和layout过程<br>P4-浏览器访问服务器过程 <strong>【面试题】</strong><br>P5-http请求报文和响应报文格式介绍<br>P6-web开发本质<br>P7-node.js是什么<br>P8-node.js特点<br>P11-node.js开发网站和传统PHP等开发网站的区别<br>P12-REPL介绍<br>P15-node.js中单线程-非阻塞IO解释</p><p><a href="https://www.bilibili.com/video/BV16E41137ZU?p=14" target="_blank">ip地址和端口号的概念</a></p><h2 id="Ajax基础"><a href="#Ajax基础" class="headerlink" title="Ajax基础"></a>Ajax基础</h2><p> <a href="https://www.bilibili.com/video/BV11E411e7yF/" target="_blank">Ajax基础</a>（ 讲的非常详细和基础，建议2倍速观看）</p><p>P01.Ajax编程基础_<br>P02.Ajax的运行环境_<br>P03.Ajax运行原理_<br>P04.Ajax的实现步骤_<br>P05.服务器响应的数据格式_<br>P06.请求参数传递_<br>P07.POST请求方式_<br>P08.请求参数的格式_<br>P09.获取服务器端的响应_<br>P10.Ajax错误处理_<br>P11.低版本IE浏览器的缓存问题_<br>P12.同步异步概述_<br>P13.Ajax封装_<br>P14.Ajax函数封装01_<br>P15.Ajax函数封装02_<br>P16.Ajax函数封装03_<br>P17.Ajax函数封装04_<br>P18.Ajax函数封装05_<br><a href="https://www.bilibili.com/video/BV11E411e7yF?p=19" target="_blank">P19 01.模板引擎概述</a> （还没看，留到node学完后）</p><h2 id="一些tips"><a href="#一些tips" class="headerlink" title="一些tips"></a>一些tips</h2><h3 id="node服务端口被占用"><a href="#node服务端口被占用" class="headerlink" title="node服务端口被占用"></a>node服务端口被占用</h3><p><a href="https://www.jianshu.com/p/0ec26fcb2733" target="_blank">node服务端口被占用</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FOR A BETTER LIFE</title>
      <link href="/2020/03/18/FOR-A-BETTER-LIFE/"/>
      <url>/2020/03/18/FOR-A-BETTER-LIFE/</url>
      
        <content type="html"><![CDATA[<h1 id="FOR-A-BETTER-LIFE-01"><a href="#FOR-A-BETTER-LIFE-01" class="headerlink" title="FOR A BETTER LIFE 01"></a>FOR A BETTER LIFE 01</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=3597649&amp;auto=1&amp;height=66"></iframe><br>不定时记录一下学习的过程。<h2 id="已经学到的（runoob）"><a href="#已经学到的（runoob）" class="headerlink" title="已经学到的（runoob）"></a>已经学到的（runoob）</h2><ul><li>HTML+CSS</li><li>JavaScript</li><li>VUE.js一些简单语法</li></ul><h2 id="目前的问题"><a href="#目前的问题" class="headerlink" title="目前的问题"></a>目前的问题</h2><ul><li>知识点只是了解了但是记不住，需要不断去翻</li><li>没有清晰的思路，脑袋混乱</li><li>VUE的学习光看文字教程不行，需要听课</li><li>只能做简单网页，离项目还很远</li></ul><h2 id="下一步学习计划"><a href="#下一步学习计划" class="headerlink" title="下一步学习计划"></a>下一步学习计划</h2><h5 id="尽快学完VUE"><a href="#尽快学完VUE" class="headerlink" title="尽快学完VUE"></a>尽快学完VUE</h5><ul><li><a href="https://www.bilibili.com/video/av27969216?p=2" target="_blank">看这个教程</a></li><li>一周内学完（27小时40分钟）</li><li>养成做笔记习惯</li><li>能做个简单的项目</li></ul><h5 id="学REACT"><a href="#学REACT" class="headerlink" title="学REACT"></a>学REACT</h5><h5 id="学webpack"><a href="#学webpack" class="headerlink" title="学webpack"></a>学webpack</h5><h5 id="搞清楚这个博客究竟是怎么实现的"><a href="#搞清楚这个博客究竟是怎么实现的" class="headerlink" title="搞清楚这个博客究竟是怎么实现的"></a>搞清楚这个博客究竟是怎么实现的</h5><h2 id="其他需要坚持的事"><a href="#其他需要坚持的事" class="headerlink" title="其他需要坚持的事"></a>其他需要坚持的事</h2><ul><li>每天背单词至少100个（坚持42天了）</li><li>天鹅臂+周六野斜方肌+站立腹肌 （约35分钟）</li></ul><h2 id="一些有的没的"><a href="#一些有的没的" class="headerlink" title="一些有的没的"></a>一些有的没的</h2><ul><li>最近气温超过20度，可是没有春天的衣服穿（呜）</li><li>老板发的论文没时间看，头疼</li><li>体重根本不掉，分明中午吃沙拉了啊，我不服</li><li>哥哥周末过生日要回来，准备开启疫情后第一次堂食（吃冒菜去）</li><li>最近皮肤有点不稳定，搞不懂了</li><li>JENKAI和KAISTAL，KSWL真的KSWL</li><li>金金的GUCCI续约啦，开心！</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> MOONPIE制作教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MOONPIE制作教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JENKAI</title>
      <link href="/2020/03/10/JENKAI/"/>
      <url>/2020/03/10/JENKAI/</url>
      
        <content type="html"><![CDATA[<h1 id="JENKAI-IS-REAL"><a href="#JENKAI-IS-REAL" class="headerlink" title="JENKAI IS REAL"></a>JENKAI IS REAL</h1><p>四月开妮都有大刊封面，ELLE×嘉人，开妮就是时尚圈顶流cp，开妮就是最屌的！<br><br>海外的饭制P图👇<br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI1.JPG" alt="GUCCI×CHANEL"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI2.JPG" alt="这张好真"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI3.JPG" alt="小情侣自拍咯"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI4.JPG" alt="kswl"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI5.JPG" alt="sweet date"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI6.JPG" alt="氛围绝了"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI7.JPG" alt="美国青少年的恋爱"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI8.JPG" alt="从小夫妻相"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI9.JPG" alt="去逛展啦"><br><br><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/JENKAI10.JPG" alt="夏威夷的夜"><br></p><p>献上我觉得最最最配的拉郎巨制👇<br></p><iframe src="//player.bilibili.com/player.html?aid=18286489&amp;cid=29859241&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="800px" height="600px"> </iframe><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>To be a skimmed moon pie</title>
      <link href="/2020/03/10/To-be-a-skimmed-moon-pie/"/>
      <url>/2020/03/10/To-be-a-skimmed-moon-pie/</url>
      
        <content type="html"><![CDATA[<h1 id="To-be-a-skimmed-moon-pie"><a href="#To-be-a-skimmed-moon-pie" class="headerlink" title="To be a skimmed moon pie"></a>To be a skimmed moon pie</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=4873543&amp;auto=1&amp;height=66"></iframe><h2 id="MOON-PIE决定脱脂"><a href="#MOON-PIE决定脱脂" class="headerlink" title="MOON PIE决定脱脂"></a>MOON PIE决定脱脂</h2><p>先来一个澳洲小玫瑰作为脱脂动力呜呜。（不知道能不能播）</p><p class="video1"><iframe src="//player.bilibili.com/player.html?aid=50173038&amp;cid=87828062&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></p>比去年这时候胖了**8斤**，我怎么这么能吃！**今年的目标是减到93，维持在97！**<h3 id="脱脂时期饮食原则"><a href="#脱脂时期饮食原则" class="headerlink" title="脱脂时期饮食原则"></a>脱脂时期饮食原则</h3><ul><li>每顿饭，吃脂肪蛋白时少碳水，吃碳水时少脂肪蛋白</li><li>尽量不吃精制碳水</li><li>进食时间≤ 8小时</li><li>细嚼慢咽</li><li>每顿饭，先吃蔬菜，再吃肉，最后吃碳水</li><li>每天起床/饭前一小时，吃苹果醋</li><li>不吃零食不喝饮料</li></ul><h3 id="和去年比想避开的"><a href="#和去年比想避开的" class="headerlink" title="和去年比想避开的"></a>和去年比想避开的</h3><ul><li>不再每天计算卡路里</li><li>吃饱，防止暴食</li><li>加入适度运动</li><li>放平心态</li></ul><h2 id="MOON-PIE要去打工"><a href="#MOON-PIE要去打工" class="headerlink" title="MOON PIE要去打工"></a>MOON PIE要去打工</h2><p>好烦啊，学习的进度有点慢，刚学完HTML,CSS和JS都还没碰，现在决定改变战略。</p><ul><li>快速过完CSS和JS，不再所有内容都实践</li><li>看面筋，刷题</li></ul><h2 id="MOON-PIE不想科研"><a href="#MOON-PIE不想科研" class="headerlink" title="MOON PIE不想科研"></a>MOON PIE不想科研</h2><p>正在拖延+逃避</p><ul><li>看老板发的四篇论文</li><li>等投稿消息</li></ul><h2 id="MOON-PIE的开心事"><a href="#MOON-PIE的开心事" class="headerlink" title="MOON PIE的开心事"></a>MOON PIE的开心事</h2><ul><li>有在一直坚持背单词，超过一个月啦</li><li>尝试新的妆容风格，奶凶猫眼妆（努力做仿珍人）</li><li>昨天帮妈妈化妆啦，得到了爸妈夸奖嘿嘿嘿</li></ul><h2 id="MOON-PIE的心愿盒"><a href="#MOON-PIE的心愿盒" class="headerlink" title="MOON PIE的心愿盒"></a>MOON PIE的心愿盒</h2><ul><li>四月前减到100斤以下</li><li>天灵灵地灵灵，投稿请中吧呜呜呜！</li><li>找到还不错的实习</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MARCH GUCCI BOY</title>
      <link href="/2020/03/04/MARCH-GUCCI-BOY/"/>
      <url>/2020/03/04/MARCH-GUCCI-BOY/</url>
      
        <content type="html"><![CDATA[<h1 id="MARCH-GUCCI-BOY"><a href="#MARCH-GUCCI-BOY" class="headerlink" title="MARCH GUCCI BOY"></a>MARCH GUCCI BOY</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=478920065&amp;auto=1&amp;height=66"></iframe><p>今天一睁眼就有好消息~<strong>GUCCI BOY</strong>的春夏广告大片来啦！</p><p><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/GUCCIBOY.JPG" alt="人间GUCCI" title="人间GUCCI"></p><p>这次的广告真的好有质感噢，美式复古，嬉皮又风骚，我超爱！一整天的心情都被点亮了耶！<br>难驾驭的蕾丝手套和蕾丝袜也被他穿的好合理，真的是人间GUCCI！</p><h2 id="今天的开心事件"><a href="#今天的开心事件" class="headerlink" title="今天的开心事件"></a>今天的开心事件</h2><ul><li>昨天搞了个GitHub+PicGo的<strong>图床</strong>，但是感觉不太稳定，有时候会突然被墙，图直接裂开哈哈哈。</li><li>现在还在恶补HTML中，争取今天吧HTML给看完，明天迈入CSS！</li><li>今天在iherb上海淘的东西到啦！补充剂吃起来，做健康女孩！</li><li>学会插入音乐了哈哈哈~</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THE FIRST MOON PIE</title>
      <link href="/2020/03/03/article-title/"/>
      <url>/2020/03/03/article-title/</url>
      
        <content type="html"><![CDATA[<h2 id="THE-FIRST-MOON-PIE"><a href="#THE-FIRST-MOON-PIE" class="headerlink" title="THE FIRST MOON PIE"></a>THE FIRST MOON PIE</h2><p>感觉高中毕业以后再也没写过这种闲谈的日志，有点害羞哩。</p><p><strong>三月</strong>到啦，这可能是除了夏天外，一年里我最喜欢的月份。<br>春天来了，气温上升，可以穿的<strong>轻飘飘</strong>~<br>我和无甜味的<strong>生日</strong>也要来了！接下来还会有很多好朋友过生日！<br>随着春暖花开，人好像也有了<strong>振作起来</strong>的动力，虽然年年如此，但是还是会感到幸福。</p><p>开这个博客的初衷，是为了<del>有地方能记录我的碎碎念</del>学会前端找个实习。<br>不知不觉就到研二下学期啦，因为疫情的缘故开学还不知道要到什么时候。<br>人还在家里享受安逸，现实却摆在眼前啦。<br><strong>好怕找不到工作啊！</strong><br>不管怎样，哪怕每天进步一点点，为了未来而努力吧！</p><hr><h3 id="制定一下本月并不会完成的计划吧！"><a href="#制定一下本月并不会完成的计划吧！" class="headerlink" title="制定一下本月并不会完成的计划吧！"></a><strong>制定一下本月<del>并不会完成的</del>计划吧！</strong></h3><ul><li>学一遍HTML+CSS+JS的基本教程</li><li>每天背至少一百个单词（已经坚持了28天啦）</li><li>减肥5斤</li><li>每晚做天鹅臂+周六野斜方肌</li><li>看完三篇论文（明天就看）</li></ul><hr><p><img src="https://raw.githubusercontent.com/Kaaaaaaious/FigBed/master/img/bear2.jpg" alt="三月开冲！" title="我就试试看能不能贴图"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/06/hello-world/"/>
      <url>/2020/02/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
